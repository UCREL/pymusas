"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[821],{3905:function(e,t,r){r.d(t,{Zo:function(){return o},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},o=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),m=p(r),g=a,d=m["".concat(u,".").concat(g)]||m[g]||c[g]||l;return r?n.createElement(d,s(s({ref:t},o),{},{components:r})):n.createElement(d,s({ref:t},o))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,s=new Array(l);s[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<l;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3350:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return o},default:function(){return m}});var n=r(3117),a=r(102),l=(r(7294),r(3905)),s=["components"],i={},u=void 0,p={unversionedId:"api/spacy_api/taggers/rules",id:"api/spacy_api/taggers/rules",title:"rules",description:"pymusas.spacy_api.taggers.rules",source:"@site/docs/api/spacy_api/taggers/rules.md",sourceDirName:"api/spacy_api/taggers",slug:"/api/spacy_api/taggers/rules",permalink:"/pymusas/api/spacy_api/taggers/rules",editUrl:"https://github.com/ucrel/pymusas/edit/main/docs/docs/api/spacy_api/taggers/rules.md",tags:[],version:"current",lastUpdatedBy:"Andrew Moore",lastUpdatedAt:1654178905,formattedLastUpdatedAt:"6/2/2022",frontMatter:{},sidebar:"api",previous:{title:"rule_based",permalink:"/pymusas/api/spacy_api/taggers/rule_based"},next:{title:"rule_based",permalink:"/pymusas/api/taggers/rule_based"}},o=[{value:"single_word_rule",id:"single_word_rule",children:[],level:3},{value:"mwe_rule",id:"mwe_rule",children:[],level:3},{value:"rule_list",id:"rule_list",children:[],level:3}],c={toc:o};function m(e){var t=e.components,r=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"source-div"},(0,l.kt)("p",null,(0,l.kt)("i",null,"pymusas"),(0,l.kt)("i",null,".spacy_api"),(0,l.kt)("i",null,".taggers"),(0,l.kt)("strong",null,".rules")),(0,l.kt)("p",null,(0,l.kt)("a",{className:"sourcelink",href:"https://github.com/UCREL/pymusas/blob/main/pymusas/spacy_api/taggers/rules.py"},"[SOURCE]"))),(0,l.kt)("div",null),(0,l.kt)("hr",null),(0,l.kt)("p",null,"spaCy registered functions for creating the following tagger rules:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/pymusas/api/taggers/rules/single_word/#singlewordrule"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.taggers.rules.single_word.SingleWordRule"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/pymusas/api/taggers/rules/mwe/#mwerule"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.taggers.rules.mwe.MWERule")))),(0,l.kt)("p",null,"And helper functions for the rules."),(0,l.kt)("a",{id:"pymusas.spacy_api.taggers.rules.single_word_rule"}),(0,l.kt)("h3",{id:"single_word_rule"},"single","_","word","_","rule"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"@spacy.util.registry.misc('pymusas.taggers.rules.SingleWordRule.v1')\ndef single_word_rule(\n    lexicon_collection: Dict[str, List[str]],\n    lemma_lexicon_collection: Dict[str, List[str]],\n    pos_mapper: Optional[Dict[str, List[str]]] = None\n) -> SingleWordRule\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pymusas.taggers.rules.SingleWordRule.v1")," is a registered function under the\n",(0,l.kt)("inlineCode",{parentName:"p"},"@misc")," function register."),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"/pymusas/api/taggers/rules/single_word/#singlewordrule"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.taggers.rules.single_word.SingleWordRule"))," for\ndetails on parameters to this function."),(0,l.kt)("h4",{id:"single_word_rule.returns"},"Returns",(0,l.kt)("a",{className:"headerlink",href:"#single_word_rule.returns",title:"Permanent link"},"\xb6")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/pymusas/api/taggers/rules/single_word/#singlewordrule"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.taggers.rules.single_word.SingleWordRule"))," ",(0,l.kt)("br",null))),(0,l.kt)("a",{id:"pymusas.spacy_api.taggers.rules.mwe_rule"}),(0,l.kt)("h3",{id:"mwe_rule"},"mwe","_","rule"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"@spacy.util.registry.misc('pymusas.taggers.rules.MWERule.v1')\ndef mwe_rule(\n    mwe_lexicon_lookup: Dict[str, List[str]],\n    pos_mapper: Optional[Dict[str, List[str]]] = None\n) -> MWERule\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pymusas.taggers.rules.MWERule.v1")," is a registered function under the\n",(0,l.kt)("inlineCode",{parentName:"p"},"@misc")," function register."),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"/pymusas/api/taggers/rules/mwe/#mwerule"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.taggers.rules.mwe.MWERule"))," for details on\nparameters to this function."),(0,l.kt)("h4",{id:"mwe_rule.returns"},"Returns",(0,l.kt)("a",{className:"headerlink",href:"#mwe_rule.returns",title:"Permanent link"},"\xb6")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/pymusas/api/taggers/rules/mwe/#mwerule"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.taggers.rules.mwe.MWERule"))," ",(0,l.kt)("br",null))),(0,l.kt)("a",{id:"pymusas.spacy_api.taggers.rules.rule_list"}),(0,l.kt)("h3",{id:"rule_list"},"rule","_","list"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"@spacy.util.registry.misc('pymusas.taggers.rules.rule_list')\ndef rule_list(*rules: Rule) -> List[Rule]\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pymusas.taggers.rules.rule_list")," is a registered function under the\n",(0,l.kt)("inlineCode",{parentName:"p"},"@misc")," function register. The function is required when wanting to create\na ",(0,l.kt)("inlineCode",{parentName:"p"},"List")," of rules within a\n",(0,l.kt)("a",{parentName:"p",href:"https://thinc.ai/docs/usage-config"},"config file"),". We\nfound it not possible to specify a ",(0,l.kt)("inlineCode",{parentName:"p"},"List")," of custom objects within a config\nfile, but is possible when using\n",(0,l.kt)("a",{parentName:"p",href:"https://thinc.ai/docs/usage-config#registries-args"},"variable position arguments"),",\nwhich this function accepts as input."),(0,l.kt)("p",null,"This function is most likely to be\nused when creating a ",(0,l.kt)("a",{parentName:"p",href:"/pymusas/api/spacy_api/taggers/rule_based/#rulebasedtagger"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.spacy_api.taggers.rule_based.RuleBasedTagger")),"."),(0,l.kt)("h4",{id:"rule_list.parameters"},"Parameters",(0,l.kt)("a",{className:"headerlink",href:"#rule_list.parameters",title:"Permanent link"},"\xb6")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"rules")," : ",(0,l.kt)("inlineCode",{parentName:"li"},"Rule")," ",(0,l.kt)("br",null),"\nThe ",(0,l.kt)("a",{parentName:"li",href:"/pymusas/api/taggers/rules/rule/#rule"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.taggers.rules.rule.Rule")),"s to convert into a ",(0,l.kt)("inlineCode",{parentName:"li"},"List"),"\nof ",(0,l.kt)("inlineCode",{parentName:"li"},"Rule"),"s.")),(0,l.kt)("h4",{id:"rule_list.returns"},"Returns",(0,l.kt)("a",{className:"headerlink",href:"#rule_list.returns",title:"Permanent link"},"\xb6")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"List[Rule]")," ",(0,l.kt)("br",null))))}m.isMDXComponent=!0}}]);