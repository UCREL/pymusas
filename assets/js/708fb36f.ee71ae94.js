"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[949],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return _}});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=i.createContext({}),p=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),u=p(n),_=l,f=u["".concat(c,".").concat(_)]||u[_]||m[_]||a;return n?i.createElement(f,o(o({ref:t},s),{},{components:n})):i.createElement(f,o({ref:t},s))}));function _(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=u;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r.mdxType="string"==typeof e?e:l,o[1]=r;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8414:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var i=n(3117),l=n(102),a=(n(7294),n(3905)),o=["components"],r={},c=void 0,p={unversionedId:"api/spacy_api/lexicon_collection",id:"api/spacy_api/lexicon_collection",title:"lexicon_collection",description:"pymusas.spacyapi.lexiconcollection",source:"@site/docs/api/spacy_api/lexicon_collection.md",sourceDirName:"api/spacy_api",slug:"/api/spacy_api/lexicon_collection",permalink:"/pymusas/api/spacy_api/lexicon_collection",editUrl:"https://github.com/ucrel/pymusas/edit/main/docs/docs/api/spacy_api/lexicon_collection.md",tags:[],version:"current",lastUpdatedBy:"Andrew Moore",lastUpdatedAt:1654178905,formattedLastUpdatedAt:"6/2/2022",frontMatter:{},sidebar:"api",previous:{title:"ranking_meta_data",permalink:"/pymusas/api/rankers/ranking_meta_data"},next:{title:"pos_mapper",permalink:"/pymusas/api/spacy_api/pos_mapper"}},s=[{value:"lexicon_collection_from_tsv",id:"lexicon_collection_from_tsv",children:[],level:3},{value:"mwe_lexicon_collection_from_tsv",id:"mwe_lexicon_collection_from_tsv",children:[],level:3}],m={toc:s};function u(e){var t=e.components,n=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"source-div"},(0,a.kt)("p",null,(0,a.kt)("i",null,"pymusas"),(0,a.kt)("i",null,".spacy_api"),(0,a.kt)("strong",null,".lexicon_collection")),(0,a.kt)("p",null,(0,a.kt)("a",{className:"sourcelink",href:"https://github.com/UCREL/pymusas/blob/main/pymusas/spacy_api/lexicon_collection.py"},"[SOURCE]"))),(0,a.kt)("div",null),(0,a.kt)("hr",null),(0,a.kt)("p",null,"spaCy registered functions for reading in a\n",(0,a.kt)("a",{parentName:"p",href:"/pymusas/api/lexicon_collection/#lexiconcollection"},(0,a.kt)("inlineCode",{parentName:"a"},"pymusas.lexicon_collection.LexiconCollection"))," or\n",(0,a.kt)("a",{parentName:"p",href:"/pymusas/api/lexicon_collection/#mwelexiconcollection"},(0,a.kt)("inlineCode",{parentName:"a"},"pymusas.lexicon_collection.MWELexiconCollection"))," from a TSV file."),(0,a.kt)("a",{id:"pymusas.spacy_api.lexicon_collection.lexicon_collection_from_tsv"}),(0,a.kt)("h3",{id:"lexicon_collection_from_tsv"},"lexicon","_","collection","_","from","_","tsv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@spacy.util.registry.misc('pymusas.LexiconCollection.from_tsv')\ndef lexicon_collection_from_tsv(\n    tsv_file_path: Union[PathLike, str],\n    include_pos: bool = True\n) -> Dict[str, List[str]]\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pymusas.LexiconCollection.from_tsv")," is a registered function under the\n",(0,a.kt)("inlineCode",{parentName:"p"},"@misc")," function register. Given a ",(0,a.kt)("inlineCode",{parentName:"p"},"tsv_file_path")," it will return a\ndictionary object that can be used to create a\n",(0,a.kt)("a",{parentName:"p",href:"/pymusas/api/lexicon_collection/#lexiconcollection"},(0,a.kt)("inlineCode",{parentName:"a"},"pymusas.lexicon_collection.LexiconCollection")),"."),(0,a.kt)("h4",{id:"lexicon_collection_from_tsv.parameters"},"Parameters",(0,a.kt)("a",{className:"headerlink",href:"#lexicon_collection_from_tsv.parameters",title:"Permanent link"},"\xb6")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"tsv","_","file","_","path")," : ",(0,a.kt)("inlineCode",{parentName:"p"},"Union[PathLike, str]")," ",(0,a.kt)("br",null),"\nA file path or URL to a TSV file that contains at least two\nfields, with an optional third, with the following headings:"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"lemma"),",")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"semantic_tags"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"pos")," (Optional)"),(0,a.kt)("p",{parentName:"li"},"All other fields will be ignored.")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"include","_","pos")," : ",(0,a.kt)("inlineCode",{parentName:"p"},"bool"),", optional (default = ",(0,a.kt)("inlineCode",{parentName:"p"},"True"),") ",(0,a.kt)("br",null),"\nWhether to include the POS information, if the information is avaliable,\nor not. See ",(0,a.kt)("a",{parentName:"p",href:"#add_lexicon_entry"},(0,a.kt)("inlineCode",{parentName:"a"},"add_lexicon_entry"))," for more information on this\nparameter."))),(0,a.kt)("h4",{id:"lexicon_collection_from_tsv.returns"},"Returns",(0,a.kt)("a",{className:"headerlink",href:"#lexicon_collection_from_tsv.returns",title:"Permanent link"},"\xb6")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Dict[str, List[str]]")," ",(0,a.kt)("br",null))),(0,a.kt)("a",{id:"pymusas.spacy_api.lexicon_collection.mwe_lexicon_collection_from_tsv"}),(0,a.kt)("h3",{id:"mwe_lexicon_collection_from_tsv"},"mwe","_","lexicon","_","collection","_","from","_","tsv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@spacy.util.registry.misc('pymusas.MWELexiconCollection.from_tsv')\ndef mwe_lexicon_collection_from_tsv(\n    tsv_file_path: Union[PathLike, str]\n) -> Dict[str, List[str]]\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pymusas.MWELexiconCollection.from_tsv")," is a registered function under the\n",(0,a.kt)("inlineCode",{parentName:"p"},"@misc")," function register. Given a ",(0,a.kt)("inlineCode",{parentName:"p"},"tsv_file_path")," it will return a\ndictionary object that can be used to create a\n",(0,a.kt)("a",{parentName:"p",href:"/pymusas/api/lexicon_collection/#mwelexiconcollection"},(0,a.kt)("inlineCode",{parentName:"a"},"pymusas.lexicon_collection.MWELexiconCollection")),"."),(0,a.kt)("h4",{id:"mwe_lexicon_collection_from_tsv.parameters"},"Parameters",(0,a.kt)("a",{className:"headerlink",href:"#mwe_lexicon_collection_from_tsv.parameters",title:"Permanent link"},"\xb6")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"tsv","_","file","_","path")," : ",(0,a.kt)("inlineCode",{parentName:"p"},"Union[PathLike, str]")," ",(0,a.kt)("br",null),"\nA file path or URL to a TSV file that contains at least these two\nfields:"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"mwe_template"),",")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"semantic_tags")),(0,a.kt)("p",{parentName:"li"},"All other fields will be ignored."))))),(0,a.kt)("h4",{id:"mwe_lexicon_collection_from_tsv.returns"},"Returns",(0,a.kt)("a",{className:"headerlink",href:"#mwe_lexicon_collection_from_tsv.returns",title:"Permanent link"},"\xb6")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Dict[str, List[str]]")," ",(0,a.kt)("br",null))))}u.isMDXComponent=!0}}]);