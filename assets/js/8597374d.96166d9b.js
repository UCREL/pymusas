"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[497],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),k=a,d=m["".concat(o,".").concat(k)]||m[k]||c[k]||l;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,s=new Array(l);s[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<l;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5787:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=n(3117),a=n(102),l=(n(7294),n(3905)),s=["components"],i={},o=void 0,u={unversionedId:"api/taggers/rules/rule",id:"api/taggers/rules/rule",title:"rule",description:"pymusas.taggers.rules.rule",source:"@site/docs/api/taggers/rules/rule.md",sourceDirName:"api/taggers/rules",slug:"/api/taggers/rules/rule",permalink:"/pymusas/api/taggers/rules/rule",editUrl:"https://github.com/ucrel/pymusas/edit/main/docs/docs/api/taggers/rules/rule.md",tags:[],version:"current",lastUpdatedBy:"Andrew Moore",lastUpdatedAt:1652297470,formattedLastUpdatedAt:"5/11/2022",frontMatter:{},sidebar:"api",previous:{title:"mwe",permalink:"/pymusas/api/taggers/rules/mwe"},next:{title:"single_word",permalink:"/pymusas/api/taggers/rules/single_word"}},p=[{value:"Rule",id:"rule",children:[{value:"__call__",id:"__call__",children:[],level:3}],level:2}],c={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"source-div"},(0,l.kt)("p",null,(0,l.kt)("i",null,"pymusas"),(0,l.kt)("i",null,".taggers"),(0,l.kt)("i",null,".rules"),(0,l.kt)("strong",null,".rule")),(0,l.kt)("p",null,(0,l.kt)("a",{className:"sourcelink",href:"https://github.com/UCREL/pymusas/blob/main/pymusas/taggers/rules/rule.py"},"[SOURCE]"))),(0,l.kt)("div",null),(0,l.kt)("hr",null),(0,l.kt)("a",{id:"pymusas.taggers.rules.rule.Rule"}),(0,l.kt)("h2",{id:"rule"},"Rule"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Rule(Serialise)\n")),(0,l.kt)("p",null,"An ",(0,l.kt)("strong",{parentName:"p"},"abstract class")," that defines the basic method, ",(0,l.kt)("inlineCode",{parentName:"p"},"__call__"),", that is\nrequired for all ",(0,l.kt)("a",{parentName:"p",href:"#rule"},(0,l.kt)("inlineCode",{parentName:"a"},"Rule")),"s."),(0,l.kt)("p",null,"A Rule when called, ",(0,l.kt)("inlineCode",{parentName:"p"},"__call__"),", creates a ",(0,l.kt)("inlineCode",{parentName:"p"},"List")," of rules matches for each\ntoken, whereby each rule matched is defined by the\n",(0,l.kt)("a",{parentName:"p",href:"/pymusas/api/rankers/ranking_meta_data/#rankingmetadata"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.rankers.ranking_meta_data.RankingMetaData"))," object. These\nrules matches per token can then be, optionally, combined with other rule\nmatches per token from other ",(0,l.kt)("a",{parentName:"p",href:"#rule"},(0,l.kt)("inlineCode",{parentName:"a"},"Rule"))," classes to then be ranked by a\n",(0,l.kt)("a",{parentName:"p",href:"/pymusas/api/rankers/lexicon_entry/#lexiconentryranker"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.rankers.lexicon_entry.LexiconEntryRanker")),"."),(0,l.kt)("a",{id:"pymusas.taggers.rules.rule.Rule.__call__"}),(0,l.kt)("h3",{id:"__call__"},"_","_","call","_","_"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Rule(Serialise):\n | ...\n | @abstractmethod\n | def __call__(\n |     self,\n |     tokens: List[str],\n |     lemmas: List[str],\n |     pos_tags: List[str]\n | ) -> List[List[RankingMetaData]]\n")),(0,l.kt)("p",null,"For each token it returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"List")," of rules matches defined by the\n",(0,l.kt)("a",{parentName:"p",href:"/pymusas/api/rankers/ranking_meta_data/#rankingmetadata"},(0,l.kt)("inlineCode",{parentName:"a"},"pymusas.rankers.ranking_meta_data.RankingMetaData"))," object."),(0,l.kt)("p",null,"Each ",(0,l.kt)("inlineCode",{parentName:"p"},"List")," of ",(0,l.kt)("inlineCode",{parentName:"p"},"tokens"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"lemmas"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"pos_tags")," are assumed to be of\nequal length."),(0,l.kt)("h4",{id:"__call__.parameters"},"Parameters",(0,l.kt)("a",{className:"headerlink",href:"#__call__.parameters",title:"Permanent link"},"\xb6")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"tokens")," : ",(0,l.kt)("inlineCode",{parentName:"li"},"List[str]")," ",(0,l.kt)("br",null),"\nThe tokens that are within the text."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"lemmas")," : ",(0,l.kt)("inlineCode",{parentName:"li"},"List[str]")," ",(0,l.kt)("br",null),"\nThe lemmas of the tokens."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"pos","_","tags")," : ",(0,l.kt)("inlineCode",{parentName:"li"},"List[str]")," ",(0,l.kt)("br",null),"\nThe Part Of Speech tags of the tokens.")),(0,l.kt)("h4",{id:"__call__.returns"},"Returns",(0,l.kt)("a",{className:"headerlink",href:"#__call__.returns",title:"Permanent link"},"\xb6")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"List[List[RankingMetaData]]")," ",(0,l.kt)("br",null))))}m.isMDXComponent=!0}}]);